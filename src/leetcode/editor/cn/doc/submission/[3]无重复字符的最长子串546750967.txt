    class Solution {
        public int lengthOfLongestSubstring(String s) {
            int begin = 0;
            int maxLength = 0;
            Map<Character, Integer> map = new HashMap<>();
            for (int i = 0; i < s.length(); i++) {
                char c = s.charAt(i);
                if (map.containsKey(c)) {
                    begin = Math.max(begin, map.get(c) + 1);
                }
                map.put(c, i);
                maxLength = Math.max(maxLength, i - begin + 1);
            }
            return maxLength;
        }
    }

//runtime:4 ms
//memory:43.6 MB

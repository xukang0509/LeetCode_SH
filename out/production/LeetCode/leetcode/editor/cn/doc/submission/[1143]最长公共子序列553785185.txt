    class Solution {
        public int longestCommonSubsequence(String text1, String text2) {
            if (text1 == null || text1.isEmpty()) return 0;
            if (text2 == null || text2.isEmpty()) return 0;
            int len1 = text1.length() + 1;
            int len2 = text2.length() + 1;
            char[] chars1 = text1.toCharArray();
            char[] chars2 = text2.toCharArray();
            int[][] dp = new int[len1][len2];
            int max = 0;
            for (int i = 1; i < len1; i++) {
                for (int j = 1; j < len2; j++) {
                    if (chars1[i - 1] == chars2[j - 1]) {
                        dp[i][j] = dp[i - 1][j - 1] + 1;
                    } else {
                        dp[i][j] = Integer.max(dp[i - 1][j], dp[i][j - 1]);
                    }
                    max = Integer.max(max, dp[i][j]);
                }
            }
            return max;
        }
    }

//runtime:12 ms
//memory:49.7 MB
